<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush x:Key="Color1" Color="#20E425" />
    <SolidColorBrush x:Key="Color2" Color="#24DBE6" />
    <SolidColorBrush x:Key="Color3" Color="#f3c623" />
    <SolidColorBrush x:Key="Color4" Color="#EEEEEE" />
    <SolidColorBrush x:Key="Color5" Color="#192B44" />
    <SolidColorBrush x:Key="Color6" Color="#305382" />

    <SolidColorBrush x:Key="BackgroundColor1"  Color="#232227" />
    <SolidColorBrush x:Key="BackgroundColor2"  Color="#2A292E" />

    <Style TargetType="Window" x:Key="ThemeWindow">
        <Setter Property="Background" Value="{DynamicResource BackgroundColor1}"/>
        <Setter Property="WindowStyle" Value="None"/>

        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="0"
                    CornerRadius="10"
                    GlassFrameThickness="0"
                    NonClientFrameEdges="None"
                    ResizeBorderThickness="10"/>
            </Setter.Value>
        </Setter>

        <Setter Property="FontFamily" Value="/Fonts/#Raleway"/>
        <Setter Property="FontSize" Value="14"/>

    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource Color4}"/>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource BackgroundColor1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BackgroundColor1}"/>
        <Setter Property="BorderThickness" Value="1.5"/>
        <Setter Property="Foreground" Value="{DynamicResource Color4}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource Color5}"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource Color6}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource Color6}"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource Color5}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListView">
        <Setter Property="Background" Value="{DynamicResource BackgroundColor2}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="FontFamily" Value="/Fonts/#Raleway"/>
                    <Setter Property="Foreground" Value="{DynamicResource Color4}"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Background" Value="Gold" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Menu">
        <Setter Property="Background" Value="{DynamicResource BackgroundColor2}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type MenuItem}">
                    <Setter Property="Width" Value="50"/>
                    <Setter Property="Height" Value="35"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="Foreground" Value="{DynamicResource Color4}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="MinHeight" Value="32"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>

                        <ToggleButton
                            Name="ToggleButton"
                            BorderBrush="{DynamicResource BackgroundColor1}"
                            Background="{DynamicResource BackgroundColor2}"
                            Foreground="{DynamicResource BackgroundColor1}"  
                            Style="{x:Null}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">

                        </ToggleButton>
                        <Path Name="Arrow"
                                Width="10"
                                Margin="10 12"
                                Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                                HorizontalAlignment="Right"  
                                Fill="{DynamicResource Color4}" IsHitTestVisible="False"/>
                        <ContentPresenter
                            Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="10,3,30,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />

                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Margin="3,3,23,3"
                            Focusable="True"                               
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>


                        <Popup
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Fade">

                            <Grid
                              Name="DropDown"
                              SnapsToDevicePixels="False"               
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">

                                <Border
                                    x:Name="DropDownBorder"
                                    Background="{DynamicResource BackgroundColor1}"
                                    BorderThickness="0"
                                    BorderBrush="Gray"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="90"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="false">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">

                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="Black" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>